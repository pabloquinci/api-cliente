version: "3.8"
services:
  mysqldb:
    container_name: mysqldb
    image: mysql:latest
    volumes:
      -  /home/user/Desktop/db:/var/lib/mysql
    ports:
      - 3306:3306
    environment: 
       - MYSQL_DATABASE=devsu
       - MYSQL_ROOT_PASSWORD=
       - MYSQL_ALLOW_EMPTY_PASSWORD= yes
    networks:
       - backend-network
  mysqldb2:
    #container_name: mysqldb2
    image: mysql:latest
    ports:
      - 3307:3306
    environment: 
        - MYSQL_DATABASE=devsu-cuenta
        - MYSQL_ROOT_PASSWORD=
        - MYSQL_ALLOW_EMPTY_PASSWORD= yes
  api-cliente:
    #container_name: api-cliente
    build: .
    #context: ./api-cliente/
    ports:
      - 8080:8080
    environment:
      - MYSQL_DATABASE=devsu
      - MYSQL_USER=root
      - MYSQL_PASSWORD=
      - MYSQL_HOST=mysqldb
      - MYSQL_PORT=3306
    depends_on:
      - mysqldb
  api-cuenta:
    #container_name: api-cuenta
    build: .
    #context: ./api-cuenta/
    ports:
      - 8081:8080
    environment:
      - MYSQL_USER=root
      - MYSQL_PASSWORD=
      - MYSQL_DATABASE=devsu-cuenta
      - MYSQL_HOST=mysqldb2
      - MYSQL_PORT=3307
    depends_on:
      - mysqldb2
  redis:
    image: redis:3.2.5
    restart: always
    ports:
      - 6379:6379
    volumes:
      - /path/to/local/d–∞ta:/root/redis
      - /path/to/local/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
      - REDIS_DATABASES=16
  rabbitmq:
    image: rabbitmq:3.9-management
    container_name: rabbitmq-local
    hostname: rabbitmq
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq_init.sh:/docker-entrypoint-init.d/rabbitmq_init.sh
    command: rabbitmq-server
volumes:
  rabbitmq_data:
    driver: local
networks:
  backend-network:   # Define la red de Docker
    driver: bridge